syntax = "proto3";
service FileService {
    rpc uploadFile (stream FileData) returns (Ack) {
    }
    rpc downloadFile (FileInfo) returns (stream FileData) {
    }
    rpc searchFile (FileInfo) returns (Ack) {
    }
    rpc replicateFile (stream FileData) returns (Ack) {
    }
    rpc listFile (UserInfo) returns (FileResponse) {
    }
    rpc deleteFile (FileInfo) returns (Ack) {
    }
    rpc updateFile (stream FileData) returns (Ack) {
    }
    // to all nodes
    rpc assignNodeIp (NodeInfo) returns (NodeName) {
    }
    // to all nodes
    rpc nodeUpdate(UpdateMessage) returns (UpdateMessage) {
    }
    // heartbeat
    rpc isAlive (NodeInfo) returns (Stats) {
    }

    rpc getClusterStats (Empty) returns (ClusterStats);
    rpc getLeaderInfo (ClusterInfo) returns (Ack);
}

message FileData {
    FileResponse filename = 1;
    UserInfo username = 2;
    bytes content = 3;
    int64 seqnum = 4;
}

message Ack {
    bool success = 1;
    string message = 2;

}

message FileInfo {
    UserInfo username = 1;
    FileResponse filename = 2;
}


message UserInfo {
    string username = 1;
}

message FileResponse {
    string filename = 1;
}


message NodeInfo {
    string ip = 1;
    string port = 2;
}

message NodeName {
    string name = 1;
}

// The response message containing the status of the server
message Stats {
    string cpu_usage = 1;
    string disk_space = 2;
    string used_mem = 3;
}

message UpdateMessage {
    string message = 1;
}

// The request message containing ip address and leader status
message ClusterInfo {
    string ip = 1;
    string port = 2;
    string clusterName = 3;
}

// The response message containing the status of the server
message ClusterStats {
    string cpu_usage = 1;
    string disk_space = 2;
    string used_mem = 3;
}

message Empty {}


